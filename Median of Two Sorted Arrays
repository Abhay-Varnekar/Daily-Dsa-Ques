class Solution 
{
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) 
    {
    int m = nums1.size();
    int n = nums2.size();

    vector<int> merged;
    int i = 0, j = 0;

    while (i < m && j < n) 
    {
        if (nums1[i] <= nums2[j]) 
        {
            merged.push_back(nums1[i]);
            i++;
        } else 
        {
            merged.push_back(nums2[j]);
            j++;
        }
    }
    while (i < m)
    {
        merged.push_back(nums1[i++]);
    }
    while (j < n) 
    {
        merged.push_back(nums2[j++]);
    }
    int mergedSize = merged.size();
    if (mergedSize % 2 == 1) 
    {        // Odd 
        return merged[mergedSize / 2];
    } else 
    {        // Even
        int mid1 = mergedSize / 2 - 1;
        int mid2 = mergedSize / 2;
        return (merged[mid1] + merged[mid2]) / 2.0;
    }

    } 
};
